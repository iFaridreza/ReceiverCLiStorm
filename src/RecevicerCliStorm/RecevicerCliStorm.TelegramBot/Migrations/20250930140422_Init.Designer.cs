// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecevicerCliStorm.TelegramBot.Infrastructer;

#nullable disable

namespace RecevicerCliStorm.TelegramBot.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250930140422_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("RecevicerCliStorm.TelegramBot.Core.Domain.Session", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("ESessionStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Active");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("RegisterDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("SessionInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SessionInfoId");

                    b.HasIndex("UserId");

                    b.HasIndex("CountryCode", "Number")
                        .IsUnique();

                    b.ToTable("Session", (string)null);
                });

            modelBuilder.Entity("RecevicerCliStorm.TelegramBot.Core.Domain.SessionInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApiId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SessionInfo", (string)null);
                });

            modelBuilder.Entity("RecevicerCliStorm.TelegramBot.Core.Domain.Sudo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("En");

                    b.HasKey("Id");

                    b.HasIndex("ChatId")
                        .IsUnique();

                    b.ToTable("Sudo", (string)null);
                });

            modelBuilder.Entity("RecevicerCliStorm.TelegramBot.Core.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("En");

                    b.HasKey("Id");

                    b.HasIndex("ChatId")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("RecevicerCliStorm.TelegramBot.Core.Domain.UserStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpierDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId")
                        .IsUnique();

                    b.ToTable("UserStep", (string)null);
                });

            modelBuilder.Entity("RecevicerCliStorm.TelegramBot.Core.Domain.Session", b =>
                {
                    b.HasOne("RecevicerCliStorm.TelegramBot.Core.Domain.SessionInfo", "SessionInfo")
                        .WithMany()
                        .HasForeignKey("SessionInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecevicerCliStorm.TelegramBot.Core.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionInfo");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
